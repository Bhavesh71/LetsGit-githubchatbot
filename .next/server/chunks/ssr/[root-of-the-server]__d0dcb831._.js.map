{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OAGJ;IACC,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;oBACA,iCACC,8OAAC,kKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CAEV,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/app/%28protected%29/dashboard/actions.ts"],"sourcesContent":["'use server'\r\n\r\n// TO IMPLEMENT RAG SYSTEM\r\n\r\nimport { streamText } from 'ai';\r\nimport { createStreamableValue } from 'ai/rsc';\r\nimport { createGoogleGenerativeAI } from '@ai-sdk/google';\r\nimport { generateEmbedding } from '@/lib/gemini';\r\nimport { db } from '@/server/db';\r\n\r\nconst google = createGoogleGenerativeAI({\r\n    apiKey: process.env.GEMINI_API_KEY,\r\n})\r\n\r\nexport async function askQuestion(question: string, projetId: string){\r\n    const stream = createStreamableValue() //  EFFECT OF TOKENS COMING BACK ONE BY ONE INTO UI AS STREAMING\r\n\r\n    // TO GENERATE QUERY VECTOR\r\n    const queryVector = await generateEmbedding(question)\r\n    const vectorQuery = `[${queryVector.join(',')}]`\r\n\r\n    const result = await db.$queryRawUnsafe(`\r\n    SELECT \"fileName\", \"sourceCode\", \"summary\",\r\n    1 - (\"summaryEmbedding\" <=> '${vectorQuery}'::vector) AS similarity\r\n    FROM \"SourceCodeEmbedding\"\r\n    WHERE 1 - (\"summaryEmbedding\" <=> '${vectorQuery}'::vector) > 0.5\r\n    AND \"projectId\" = '${projetId}'\r\n    ORDER BY similarity DESC\r\n    LIMIT 10;\r\n`) as {fileName: string, sourceCode: string, summary: string, similarity: number}[];\r\n\r\n    let context = ''\r\n\r\n    for(const doc of result){\r\n        context += `source: ${doc.fileName}\\ncode content: ${doc.sourceCode}\\n summary of file: ${doc.summary}\\n\\n`  \r\n    }\r\n\r\n    (async () => {\r\n        const {textStream} = await streamText({\r\n            model: google('gemini-1.5-flash'),\r\n            prompt: `\r\n            You are a ai code assistant who answers questions about the codebase. Your target audience is a technical intern who is looking to understand the codebase.\r\n                    AI assistant is a brand new, powerful, human-like artificial intelligence.\r\n      The traits of AI include expert knowledge, helpfulness, cleverness, and articulateness.\r\n      AI is a well-behaved and well-mannered individual.\r\n      AI is always friendly, kind, and inspiring, and he is eager to provide vivid and thoughtful responses to the user.\r\n      AI has the sum of all knowledge in their brain, and is able to accurately answer nearly any question about any topic in conversation.\r\n      If the question is asking about code or a specific file, AI will provide the detailed answer, giving step by step instructions, including code snippets.\r\n      START CONTEXT BLOCK\r\n      ${context}\r\n      END OF CONTEXT BLOCK\r\n\r\n      START QUESTION\r\n      ${question}\r\n      END OF QUESTION\r\n      AI assistant will take into account any CONTEXT BLOCK that is provided in a conversation.\r\n      If the context does not provide the answer to question, the AI assistant will say, \"I'm sorry, but I don't know the answer to that question\".\r\n      AI assistant will not apologize for previous responses, but instead will indicated new information was gained.\r\n      AI assistant will not invent anything that is not drawn directly from the context.\r\n      Answer in markdown syntax, with code snippets if needed. Be as detailed as possible when answering, make sure there is no ambiguity and include any and all relevant information to give context to the intern.\r\n            `,\r\n        });\r\n        for await(const delta of textStream){\r\n            stream.update(delta)\r\n        }\r\n        stream.done()\r\n    })()\r\n\r\n    return {\r\n        output: stream.value,\r\n        filesReferences: result\r\n    }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;IAcsB,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/app/%28protected%29/dashboard/code-references.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger  } from '@/components/ui/tabs';\r\nimport React from 'react'\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\r\nimport{lucario} from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport { cn } from '@/lib/utils';\r\n\r\ntype Props = {\r\n    filesReferences: { fileName: string; sourceCode: string; summary: string }[]\r\n}\r\n\r\nconst CodeReferences = ({ filesReferences }: Props) => {\r\n\r\n    const [tab, setTab] = React.useState(filesReferences[0]?.fileName)\r\n    if(filesReferences.length === 0) return null\r\n\r\n  return (\r\n    <div className='max-w-[70vw]'>\r\n        <Tabs value={tab} onValueChange={setTab}>\r\n            <div className='overflow-scroll flex gap-2 bg-gray-200 p-1 rounded-md'>\r\n                {filesReferences.map(file => (\r\n                    <button onClick={() => setTab(file.fileName)}\r\n                        key={file.fileName}\r\n                        className={cn(\r\n                            `px-3 py-1.5 text-sm font-medium rounded-ms transition-colors whitespace-nowrap text-muted-foreground hover:bg-muted`,\r\n                            {\r\n                                'bg-primary text-primary-foreground': tab === file.fileName,\r\n                            }\r\n                        )}\r\n                        onClick={() => setTab(file.fileName)}\r\n                    >\r\n                        {file.fileName}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            {filesReferences.map(file => (\r\n                <TabsContent key={file.fileName} value={file.fileName} className='max-h-[40vh] overflow-scroll max-w-7xl rounded-md'>\r\n                    <SyntaxHighlighter language='typescript' style={lucario}>\r\n                        {file.sourceCode}\r\n                    </SyntaxHighlighter>\r\n                </TabsContent>\r\n            ))}\r\n        </Tabs>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default CodeReferences"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAYA,MAAM,iBAAiB,CAAC,EAAE,eAAe,EAAS;IAE9C,MAAM,CAAC,KAAK,OAAO,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,EAAE;IACzD,IAAG,gBAAgB,MAAM,KAAK,GAAG,OAAO;IAE1C,qBACE,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAC,OAAO;YAAK,eAAe;;8BAC7B,8OAAC;oBAAI,WAAU;8BACV,gBAAgB,GAAG,CAAC,CAAA,qBACjB,8OAAC;4BAAO,SAAS,IAAM,OAAO,KAAK,QAAQ;4BAEvC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,CAAC,mHAAmH,CAAC,EACrH;gCACI,sCAAsC,QAAQ,KAAK,QAAQ;4BAC/D;4BAEJ,SAAS,IAAM,OAAO,KAAK,QAAQ;sCAElC,KAAK,QAAQ;2BATT,KAAK,QAAQ;;;;;;;;;;gBAa7B,gBAAgB,GAAG,CAAC,CAAA,qBACjB,8OAAC,gIAAA,CAAA,cAAW;wBAAqB,OAAO,KAAK,QAAQ;wBAAE,WAAU;kCAC7D,cAAA,8OAAC,0MAAA,CAAA,QAAiB;4BAAC,UAAS;4BAAa,OAAO,iOAAA,CAAA,UAAO;sCAClD,KAAK,UAAU;;;;;;uBAFN,KAAK,QAAQ;;;;;;;;;;;;;;;;AAS/C;uCAEe","debugId":null}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/hooks/use-refetch.ts"],"sourcesContent":["import { useQueryClient } from '@tanstack/react-query'\r\n\r\nconst useRefetch = () => {\r\n  \r\n    const queryClient = useQueryClient()\r\n    return async () => {\r\n        await queryClient.refetchQueries({\r\n            type: 'active'\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default useRefetch"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa;IAEf,MAAM,cAAc,CAAA,GAAA,sLAAA,CAAA,iBAAc,AAAD;IACjC,OAAO;QACH,MAAM,YAAY,cAAc,CAAC;YAC7B,MAAM;QACV;IACJ;AAEJ;uCAEe","debugId":null}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/app/%28protected%29/dashboard/ask-question.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React from 'react'\r\nimport useProject from '@/hooks/use-projects'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Textarea } from '@/components/ui/textarea'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog'\r\nimport Image from 'next/image'\r\nimport { askQuestion } from './actions' \r\nimport { readStreamableValue } from 'ai/rsc'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport CodeReferences from './code-references'\r\nimport { api } from '@/trpc/react'\r\nimport { toast } from 'sonner'\r\nimport useRefetch from '@/hooks/use-refetch'\r\n\r\nconst AskQuestionCard = () => {\r\n    const { project } = useProject()\r\n    const [question, setQuestion] = React.useState('')\r\n    const [open, setOpen] = React.useState(false)\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [filesReferences, setFilesReferences] = React.useState<{ fileName:string; sourceCode: string; summary: string }[]>([])\r\n    const [answer, setAnswer] = React.useState('')\r\n    const saveAnswer = api.project.saveAnswer.useMutation()\r\n\r\n    const onSubmit = async(e: React.FormEvent<HTMLFormElement>) => {\r\n        setAnswer('')\r\n        setFilesReferences([])\r\n        e.preventDefault()\r\n        if(!project?.id) return\r\n        setLoading(true)\r\n        \r\n\r\n        const { output, filesReferences } = await askQuestion(question, project.id)\r\n        setOpen(true)\r\n        setFilesReferences(filesReferences)\r\n\r\n        for await (const delta of readStreamableValue(output)) {\r\n            if (delta) {\r\n                setAnswer(ans => ans + delta)\r\n            }\r\n\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const refetch = useRefetch()\r\n\r\n\r\n  return (\r\n    <>\r\n        <Dialog open={open} onOpenChange={setOpen}>\r\n            <DialogContent className='sm:max-w-[80vw]'>\r\n                <DialogHeader>\r\n                    <div className='flex items-center gap-2'></div>\r\n                    <DialogTitle>\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <Image src='/logo.png' alt='logo' width={40} height={40} />\r\n                        </div>\r\n                    </DialogTitle>\r\n                    <Button disabled={saveAnswer.isPending} variant={'outline'} onClick={() => {\r\n                        saveAnswer.mutate({\r\n                            projectId: project!.id,\r\n                            question,\r\n                            answer, \r\n                            filesReferences\r\n                        }, {\r\n                            onSuccess: () => {\r\n                                toast.success('Answer saved!')\r\n                                refetch()\r\n                            },\r\n                            onError: () => {\r\n                                toast.error('Failed to save answer')\r\n                            }\r\n                        })\r\n                    }}>\r\n                        Save Answer\r\n                    </Button>\r\n\r\n                </DialogHeader>\r\n                \r\n                <MDEditor.Markdown source={answer}className='max-w-[70vw] lh-full max-h-[40vh] overflow-scroll' />\r\n                <div className='h-4'></div>\r\n                <CodeReferences filesReferences={filesReferences} />\r\n\r\n                <Button className='cursor-pointer' type='button' onClick={() => {setOpen(false); setAnswer('')}}>\r\n                    Close\r\n                </Button>\r\n            </DialogContent>\r\n        </Dialog>\r\n        <Card className='relative col-span-3'>\r\n            <CardHeader>\r\n                <CardTitle>\r\n                    Ask a Question\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <form onSubmit={onSubmit} >\r\n                    <Textarea placeholder='which file should I edit to change the home page?' value={question} onChange={e => setQuestion(e.target.value)} />\r\n                    <div className='h-4'></div>\r\n                    <Button type='submit' className='cursor-pointer' disabled={loading}>\r\n                        Ask ChatBot!\r\n                    </Button>\r\n                </form>\r\n            </CardContent>\r\n            \r\n        </Card>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default AskQuestionCard"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 784, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/app/%28protected%29/qa/page.tsx"],"sourcesContent":["'use client'\r\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet'\r\nimport useProject from '@/hooks/use-projects'\r\nimport {api} from '@/trpc/react'\r\nimport React from 'react'\r\nimport AskQuestionCard from '../dashboard/ask-question'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport CodeReferences from '../dashboard/code-references'\r\n\r\n\r\nconst QAPage = () => {\r\n  const { projectId } = useProject()\r\n  const {data: questions} = api.project.getQuestions.useQuery({projectId})\r\n\r\n  const [questionIndex, setQuestionIndex] = React.useState(0)\r\n  const question = questions?.[questionIndex]\r\n\r\n  return (\r\n    <Sheet>\r\n      <AskQuestionCard/>\r\n      <div className='h-4'></div>\r\n      <h1 className='text-xl font-semibold'>Saved Questions</h1>\r\n      <div className='h-2'></div>\r\n      <div className='flex flex-col gap-2'>\r\n        {questions?.map((question, index) => {\r\n          return <React.Fragment key={question.id}>\r\n            <SheetTrigger onClick={() => setQuestionIndex(index)}>\r\n              <div className='flex items-center gap-4 bg-white rounded-lg p-4 shadow border'>\r\n                <img className='rounded-full' height={30} width={30} src={question.user.imageUrl ?? \"\"} />\r\n\r\n                <div className='text-left flex flex-col'>\r\n                  <div className='flex items-center gap-2'>\r\n                      <p className='text-gray-700 line-clamp-1 text-lg font-medium'>\r\n                          {question.question}\r\n                      </p>\r\n                      <span className='text-xs text-gray-400 whitespace-nowrap'>\r\n                        {question.createdAt.toLocaleDateString()}\r\n                      </span>\r\n                  </div>\r\n                  <p className='text-gray-500 line-clamp-1 text-sm'>\r\n                      {question.answer}\r\n                  </p>\r\n\r\n                </div>\r\n              </div>\r\n            </SheetTrigger> \r\n          </React.Fragment>\r\n        })}\r\n      </div>\r\n\r\n      {question && (\r\n          <SheetContent className='sm:max-w-[80vw]'>\r\n            <SheetHeader>\r\n              <SheetTitle>\r\n                  {question.question}\r\n              </SheetTitle>\r\n              <MDEditor.Markdown source = {question.answer} />\r\n              <CodeReferences filesReferences={(question.fileReferences ?? []) as any} />\r\n            </SheetHeader>\r\n\r\n          </SheetContent>\r\n      )}\r\n    </Sheet>\r\n  )\r\n}\r\n\r\nexport default QAPage"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAPA;;;;;;;;;AAUA,MAAM,SAAS;IACb,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAU,AAAD;IAC/B,MAAM,EAAC,MAAM,SAAS,EAAC,GAAG,qHAAA,CAAA,MAAG,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC;QAAC;IAAS;IAEtE,MAAM,CAAC,eAAe,iBAAiB,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IACzD,MAAM,WAAW,WAAW,CAAC,cAAc;IAE3C,qBACE,8OAAC,iIAAA,CAAA,QAAK;;0BACJ,8OAAC,4JAAA,CAAA,UAAe;;;;;0BAChB,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAG,WAAU;0BAAwB;;;;;;0BACtC,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;0BACZ,WAAW,IAAI,CAAC,UAAU;oBACzB,qBAAO,8OAAC,qMAAA,CAAA,UAAK,CAAC,QAAQ;kCACpB,cAAA,8OAAC,iIAAA,CAAA,eAAY;4BAAC,SAAS,IAAM,iBAAiB;sCAC5C,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;wCAAe,QAAQ;wCAAI,OAAO;wCAAI,KAAK,SAAS,IAAI,CAAC,QAAQ,IAAI;;;;;;kDAEpF,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAE,WAAU;kEACR,SAAS,QAAQ;;;;;;kEAEtB,8OAAC;wDAAK,WAAU;kEACb,SAAS,SAAS,CAAC,kBAAkB;;;;;;;;;;;;0DAG5C,8OAAC;gDAAE,WAAU;0DACR,SAAS,MAAM;;;;;;;;;;;;;;;;;;;;;;;uBAfA,SAAS,EAAE;;;;;gBAsBzC;;;;;;YAGD,0BACG,8OAAC,iIAAA,CAAA,eAAY;gBAAC,WAAU;0BACtB,cAAA,8OAAC,iIAAA,CAAA,cAAW;;sCACV,8OAAC,iIAAA,CAAA,aAAU;sCACN,SAAS,QAAQ;;;;;;sCAEtB,8OAAC,8KAAA,CAAA,UAAQ,CAAC,QAAQ;4BAAC,QAAU,SAAS,MAAM;;;;;;sCAC5C,8OAAC,+JAAA,CAAA,UAAc;4BAAC,iBAAkB,SAAS,cAAc,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;AAO7E;uCAEe","debugId":null}}]
}