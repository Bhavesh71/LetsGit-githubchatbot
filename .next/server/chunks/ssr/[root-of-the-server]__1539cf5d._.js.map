{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/lib/stripe.ts"],"sourcesContent":["'use server'\r\n\r\nimport { auth } from '@clerk/nextjs/server'\r\nimport { redirect } from \"next/navigation\";\r\nimport Stripe from 'stripe'\r\n\r\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\r\n  apiVersion: '2024-10-28.acacia',\r\n})\r\n\r\n// 50 credits per dollar\r\n\r\nexport async function createCheckoutSession(credits: number) {\r\n  const { userId } = await auth()\r\n  if (!userId) {\r\n    throw new Error('Unauthorized')\r\n  }\r\n\r\n  const session = await stripe.checkout.sessions.create({\r\n    payment_method_types: ['card'],\r\n    mode: 'payment',\r\n    customer_creation: 'always',\r\n    line_items: [\r\n      {\r\n        price_data: {\r\n          currency: 'usd',\r\n          product_data: {\r\n            name: `${credits} Credits`,\r\n          },\r\n          unit_amount: Math.round((credits / 50) * 100),\r\n        },\r\n        quantity: 1,\r\n      },\r\n    ],\r\n    success_url: `${process.env.NEXT_PUBLIC_APP_URL}/create`,\r\n    cancel_url: `${process.env.NEXT_PUBLIC_APP_URL}/billing`,\r\n    client_reference_id: userId.toString(),\r\n    metadata: {\r\n      credits,\r\n    },\r\n  })\r\n\r\n  return redirect(session.url!)\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;;;;;;AAEA,MAAM,SAAS,IAAI,sJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,CAAC,iBAAiB,EAAG;IACxD,YAAY;AACd;AAIO,eAAe,sBAAsB,OAAe;IACzD,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,UAAU,MAAM,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QACpD,sBAAsB;YAAC;SAAO;QAC9B,MAAM;QACN,mBAAmB;QACnB,YAAY;YACV;gBACE,YAAY;oBACV,UAAU;oBACV,cAAc;wBACZ,MAAM,GAAG,QAAQ,QAAQ,CAAC;oBAC5B;oBACA,aAAa,KAAK,KAAK,CAAC,AAAC,UAAU,KAAM;gBAC3C;gBACA,UAAU;YACZ;SACD;QACD,aAAa,6DAAmC,OAAO,CAAC;QACxD,YAAY,6DAAmC,QAAQ,CAAC;QACxD,qBAAqB,OAAO,QAAQ;QACpC,UAAU;YACR;QACF;IACF;IAEA,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,GAAG;AAC7B;;;IA/BsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/app/%28protected%29/billing/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(protected)/billing/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(protected)/billing/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwS,GACrU,sEACA","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///D:/VIT/Projects/GitHub/github-chatbot/src/app/%28protected%29/billing/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(protected)/billing/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(protected)/billing/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}