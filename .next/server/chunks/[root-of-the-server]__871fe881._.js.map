{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/github-chatbot/src/app/api/upload/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { mkdirSync, writeFileSync } from 'fs';\r\nimport path from 'path';\r\n\r\nexport async function POST(req: NextRequest) {\r\n  const formData = await req.formData();\r\n  const file = formData.get('file') as File;\r\n\r\n  if (!file) return NextResponse.json({ error: 'No file' }, { status: 400 });\r\n\r\n  const bytes = await file.arrayBuffer();\r\n  const buffer = Buffer.from(bytes);\r\n\r\n  const uploadDir = path.join(process.cwd(), 'public', 'uploads');\r\n  mkdirSync(uploadDir, { recursive: true });\r\n\r\n  const filePath = path.join(uploadDir, file.name);\r\n  writeFileSync(filePath, buffer);\r\n\r\n  const fileUrl = `/uploads/${file.name}`;\r\n  return NextResponse.json({ url: fileUrl });\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,MAAM,WAAW,MAAM,IAAI,QAAQ;IACnC,MAAM,OAAO,SAAS,GAAG,CAAC;IAE1B,IAAI,CAAC,MAAM,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAU,GAAG;QAAE,QAAQ;IAAI;IAExE,MAAM,QAAQ,MAAM,KAAK,WAAW;IACpC,MAAM,SAAS,OAAO,IAAI,CAAC;IAE3B,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU;IACrD,CAAA,GAAA,6FAAA,CAAA,YAAS,AAAD,EAAE,WAAW;QAAE,WAAW;IAAK;IAEvC,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,WAAW,KAAK,IAAI;IAC/C,CAAA,GAAA,6FAAA,CAAA,gBAAa,AAAD,EAAE,UAAU;IAExB,MAAM,UAAU,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;IACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,KAAK;IAAQ;AAC1C","debugId":null}}]
}